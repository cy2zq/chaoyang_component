"use strict";(self.webpackChunkchaoyang_component=self.webpackChunkchaoyang_component||[]).push([[8018],{39866:function(e,n,t){var a;t.r(n),t.d(n,{demos:function(){return g}});var r,o,d,i=t(9083),c=t.n(i),l=t(43953),u=t.n(l),s=t(91184),p=t.n(s),m=t(50959),y=(t(7360),t(34125)),I=t(95331),v=t(12794),x=t(33474),g={"cytable-demo-0":{component:m.memo(m.lazy(p()(u()().mark((function e(){var n,a,r,o,d,i,c,l,s;return u()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Promise.resolve().then(t.t.bind(t,50959,19));case 2:return n=e.sent,a=n.default,e.next=6,Promise.resolve().then(t.bind(t,34125));case 6:return r=e.sent,o=r.Space,d=r.Table,i=r.Tag,c=[{title:"Name",dataIndex:"name",key:"name",render:function(e){return a.createElement("a",null,e)}},{title:"Age",dataIndex:"age",key:"age"},{title:"Address",dataIndex:"address",key:"address"},{title:"Tags",key:"tags",dataIndex:"tags",render:function(e,n){var t=n.tags;return a.createElement(a.Fragment,null,t.map((function(e){var n=e.length>5?"geekblue":"green";return"loser"===e&&(n="volcano"),a.createElement(i,{color:n,key:e},e.toUpperCase())})))}},{title:"Action",key:"action",render:function(e,n){return a.createElement(o,{size:"middle"},a.createElement("a",null,"Invite ",n.name),a.createElement("a",null,"Delete"))}}],l=[{key:"1",name:"John Brown",age:32,address:"New York No. 1 Lake Park",tags:["nice","developer"]},{key:"2",name:"Jim Green",age:42,address:"London No. 1 Lake Park",tags:["loser"]},{key:"3",name:"Joe Black",age:32,address:"Sydney No. 1 Lake Park",tags:["cool","teacher"]}],s=function(){return a.createElement(d,{columns:c,dataSource:l})},e.abrupt("return",{default:s});case 14:case"end":return e.stop()}}),e)}))))),asset:{type:"BLOCK",id:"cytable-demo-0",refAtomIds:["CyTable"],dependencies:{"index.jsx":{type:"FILE",value:"import React from 'react';\nimport { Space, Table, Tag } from 'antd';\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: (text) => <a>{text}</a>,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n    key: 'age',\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n    key: 'address',\n  },\n  {\n    title: 'Tags',\n    key: 'tags',\n    dataIndex: 'tags',\n    render: (_, { tags }) => (\n      <>\n        {tags.map((tag) => {\n          let color = tag.length > 5 ? 'geekblue' : 'green';\n          if (tag === 'loser') {\n            color = 'volcano';\n          }\n          return (\n            <Tag color={color} key={tag}>\n              {tag.toUpperCase()}\n            </Tag>\n          );\n        })}\n      </>\n    ),\n  },\n  {\n    title: 'Action',\n    key: 'action',\n    render: (_, record) => (\n      <Space size=\"middle\">\n        <a>Invite {record.name}</a>\n        <a>Delete</a>\n      </Space>\n    ),\n  },\n];\nconst data = [\n  {\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n    tags: ['nice', 'developer'],\n  },\n  {\n    key: '2',\n    name: 'Jim Green',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n    tags: ['loser'],\n  },\n  {\n    key: '3',\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sydney No. 1 Lake Park',\n    tags: ['cool', 'teacher'],\n  },\n];\nconst App = () => <Table columns={columns} dataSource={data} />;\nexport default App;"},react:{type:"NPM",value:"18.2.0"},antd:{type:"NPM",value:"5.12.8"}},entry:"index.jsx"},context:{react:a||(a=t.t(m,2)),antd:y},renderOpts:{compile:(d=p()(u()().mark((function e(){var n,a=arguments;return u()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.e(4321).then(t.bind(t,14321));case 2:return e.abrupt("return",(n=e.sent).default.apply(n,a));case 3:case"end":return e.stop()}}),e)}))),function(){return d.apply(this,arguments)})}},"cytable-demo-1":{component:m.memo(m.lazy(p()(u()().mark((function e(){var n,a,r,o,d,i,l,s;return u()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Promise.resolve().then(t.t.bind(t,50959,19));case 2:return n=e.sent,a=n.useRef,e.next=6,Promise.resolve().then(t.bind(t,95331));case 6:return r=e.sent,o=r.CyTable,e.next=10,Promise.resolve().then(t.bind(t,34125));case 10:return d=e.sent,d.Row,d.Col,d.Button,e.next=16,Promise.resolve().then(t.bind(t,12794));case 16:return i=e.sent,l=i.usePrefersColor,s=t(33474),e.abrupt("return",{default:function(){var e=l(),n=c()(e,1)[0],t=a(null),r=s.mock({"list|30-100":[{"id|+1":1,name:"@cname","sex|1":["男","女"],"age|1-100":100,address:"@county(true)",date:"@date","status|1":["启用","禁用"],remark:"@cparagraph(1, 3)",img:"@image(200x100, @color)",score:"@integer(0, 100)"}]}),d=[{field:"name",title:"姓名",width:"auto",sort:!0},{field:"sex",title:"性别",width:"auto",sort:!0},{field:"age",title:"年龄",width:"auto",sort:!0,summaryFun:function(e){return"平均年龄："+Math.round(e)+"（岁）"},summaryFunType:"AVG"},{field:"address",title:"地址",width:"auto",sort:!0},{field:"date",title:"生日",width:"auto",sort:!0},{field:"status",title:"状态",width:"auto",sort:!0},{field:"remark",title:"备注",width:"auto",sort:!0},{field:"score",title:"评分",width:"auto",sort:!0,summaryFun:function(e){return Math.round(e)+"（分）"},summaryFunType:"SUM"}];return m.createElement("div",null,m.createElement(o,{style:{width:"calc(100% - 50px)",height:"400px"},title:"测试",dataSource:null==r?void 0:r.list,columns:d,theme:"light"==n?"BRIGHT":"DARK",options:{frozenColCount:3,bottomFrozenRowCount:1},onMount:function(e,n){t.current={tableInstance:e,downloadExcel:n}}}))}});case 20:case"end":return e.stop()}}),e)}))))),asset:{type:"BLOCK",id:"cytable-demo-1",refAtomIds:["CyTable"],dependencies:{"index.jsx":{type:"FILE",value:"import { useRef } from 'react';\nimport { CyTable } from 'chaoyang_component';\nimport { Row, Col, Button } from 'antd';\nimport { usePrefersColor } from 'dumi';\n\nvar Mock = require('mockjs');\nexport default () => {\n  const [color] = usePrefersColor();\n  let ref = useRef(null);\n  var dataSource = Mock.mock({\n    // 属性 list 的值是一个数组，其中含有 1 到 10 个元素\n    'list|30-100': [\n      {\n        // 属性 id 是一个自增数，起始值为 1，每次增 1\n        'id|+1': 1,\n        name: '@cname',\n        'sex|1': ['男', '女'],\n        'age|1-100': 100,\n        address: '@county(true)',\n        date: '@date',\n        'status|1': ['启用', '禁用'],\n        remark: '@cparagraph(1, 3)',\n        img: '@image(200x100, @color)',\n        score: '@integer(0, 100)',\n      },\n    ],\n  });\n\n  let columns = [\n    {\n      field: 'name',\n      title: '姓名',\n      width: 'auto',\n      sort: true, // 使用内置默认排序逻辑\n    },\n    {\n      field: 'sex',\n      title: '性别',\n      width: 'auto',\n      sort: true, // 使用内置默认排序逻辑\n    },\n    {\n      field: 'age',\n      title: '年龄',\n      width: 'auto',\n      sort: true, // 使用内置默认排序逻辑\n      summaryFun: (value) => {\n        return '平均年龄：' + Math.round(value) + '（岁）';\n      }, // 使用内置默认合计逻辑\n      summaryFunType: 'AVG',\n    },\n    {\n      field: 'address',\n      title: '地址',\n      width: 'auto',\n      sort: true, // 使用内置默认排序逻辑\n    },\n    {\n      field: 'date',\n      title: '生日',\n      width: 'auto',\n      sort: true, // 使用内置默认排序逻辑\n    },\n    {\n      field: 'status',\n      title: '状态',\n      width: 'auto',\n      sort: true, // 使用内置默认排序逻辑\n    },\n    {\n      field: 'remark',\n      title: '备注',\n      width: 'auto',\n      sort: true, // 使用内置默认排序逻辑\n    },\n    {\n      field: 'score',\n      title: '评分',\n      width: 'auto',\n      sort: true, // 使用内置默认排序逻辑\n      summaryFun: (value) => {\n        return Math.round(value) + '（分）';\n      }, // 使用内置默认合计逻辑\n      summaryFunType: 'SUM',\n    },\n  ];\n\n  // return <div>222</div>;\n\n  return (\n    <div>\n      <CyTable\n        style={{\n          width: 'calc(100% - 50px)',\n          height: '400px',\n        }}\n        title={'测试'}\n        dataSource={dataSource?.list}\n        columns={columns}\n        theme={color == 'light' ? 'BRIGHT' : 'DARK'}\n        options={{\n          frozenColCount: 3,\n          bottomFrozenRowCount: 1,\n        }}\n        onMount={(tableInstance, downloadExcel) => {\n          ref.current = {\n            tableInstance,\n            downloadExcel,\n          };\n        }}\n      />\n    </div>\n  );\n};"},react:{type:"NPM",value:"18.2.0"},chaoyang_component:{type:"NPM",value:"1.11.0"},antd:{type:"NPM",value:"5.12.8"},mockjs:{type:"NPM",value:"1.1.0"}},entry:"index.jsx",description:"我是简介，我可以用 Markdown 来编写",title:"基本表"},context:{react:a||(a=t.t(m,2)),chaoyang_component:I,antd:y,dumi:v,mockjs:x},renderOpts:{compile:(o=p()(u()().mark((function e(){var n,a=arguments;return u()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.e(4321).then(t.bind(t,14321));case 2:return e.abrupt("return",(n=e.sent).default.apply(n,a));case 3:case"end":return e.stop()}}),e)}))),function(){return o.apply(this,arguments)})}},"cytable-demo-2":{component:m.memo(m.lazy(p()(u()().mark((function e(){var n,a,r,o,d,i,l,s;return u()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Promise.resolve().then(t.t.bind(t,50959,19));case 2:return n=e.sent,a=n.useRef,e.next=6,Promise.resolve().then(t.bind(t,95331));case 6:return r=e.sent,o=r.CyPivotTable,e.next=10,Promise.resolve().then(t.bind(t,34125));case 10:return d=e.sent,d.Row,d.Col,d.Button,e.next=16,Promise.resolve().then(t.bind(t,12794));case 16:return i=e.sent,l=i.usePrefersColor,s=t(33474),e.abrupt("return",{default:function(){var e=l(),n=c()(e,1)[0],t=(a(null),s.mock({"list|30-100":[{"id|+1":1,"Category|1":["经济指标‌","创新能力指标","基础设施指标","社会指标","环境指标"],"省份":"@province","年份|1":["2023","2024","2025"],"季度|1":["一季度","二季度","三季度","四季度"],"人均GDP":"@integer(0, 100)","就业率‌":"@integer(0, 100)","产业结构":"@integer(0, 100)","人才引进":"@integer(0, 100)","科技创新":"@integer(0, 100)","高新技术产业":"@integer(0, 100)","交通网络":"@integer(0, 100)","供水供电":"@integer(0, 100)","公共设施":"@integer(0, 100)","通信网络":"@integer(0, 100)","医疗水平":"@integer(0, 100)","社会福利":"@integer(0, 100)","治安指数":"@integer(0, 100)","空气质量":"@integer(0, 100)","水质指数":"@integer(0, 100)","噪音污染":"@integer(0, 100)","‌交通拥堵指数":"@integer(0, 100)","‌生态保护‌":"@integer(0, 100)"}]}));return m.createElement("div",null,m.createElement(o,{style:{width:"calc(100% - 50px)",height:"400px"},title:"测试",dataSource:null==t?void 0:t.list,theme:"light"==n?"DEFAULT":"DARK",options:{rows:[{dimensionKey:"省份",title:"省份",headerStyle:{textStick:!0},width:"auto"},{dimensionKey:"年份",title:"年份",headerStyle:{textStick:!0},width:"auto"},{dimensionKey:"季度",title:"季度",headerStyle:{textStick:!0},width:"auto"}],columns:[{dimensionKey:"Category",title:"分类",headerStyle:{textStick:!0},width:"auto"}],columnTree:[{dimensionKey:"Category",value:"经济指标‌",children:[{indicatorKey:"人均GDP"},{indicatorKey:"就业率‌"},{indicatorKey:"产业结构"}]},{dimensionKey:"Category",value:"创新能力指标",children:[{indicatorKey:"科技创新"},{indicatorKey:"人才引进"},{indicatorKey:"高新技术产业"}]},{dimensionKey:"Category",value:"基础设施指标",children:[{indicatorKey:"交通网络"},{indicatorKey:"供水供电"},{indicatorKey:"公共设施"},{indicatorKey:"通信网络"}]},{dimensionKey:"Category",value:"社会指标",children:[{indicatorKey:"文化教育"},{indicatorKey:"医疗水平"},{indicatorKey:"社会福利"},{indicatorKey:"治安指数"}]},{dimensionKey:"Category",value:"环境指标",children:[{indicatorKey:"空气质量"},{indicatorKey:"水质指数"},{indicatorKey:"噪音污染"},{indicatorKey:"‌交通拥堵指数"},{indicatorKey:"‌生态保护‌"}]}]}}))}});case 20:case"end":return e.stop()}}),e)}))))),asset:{type:"BLOCK",id:"cytable-demo-2",refAtomIds:["CyTable"],dependencies:{"index.jsx":{type:"FILE",value:"import { useRef } from 'react';\nimport { CyPivotTable } from 'chaoyang_component';\nimport { Row, Col, Button } from 'antd';\nimport { usePrefersColor } from 'dumi';\n\nvar Mock = require('mockjs');\nexport default () => {\n  const [color] = usePrefersColor();\n  let ref = useRef(null);\n  var dataSource = Mock.mock({\n    // 属性 list 的值是一个数组，其中含有 1 到 10 个元素\n    'list|30-100': [\n      {\n        // 属性 id 是一个自增数，起始值为 1，每次增 1\n        'id|+1': 1,\n        'Category|1': ['经济指标‌', '创新能力指标', '基础设施指标', '社会指标', '环境指标'],\n        // '城市': '@city',\n        省份: '@province',\n        '年份|1': ['2023', '2024', '2025'],\n        '季度|1': ['一季度', '二季度', '三季度', '四季度'],\n        人均GDP: '@integer(0, 100)',\n        就业率‌: '@integer(0, 100)',\n        产业结构: '@integer(0, 100)',\n        人才引进: '@integer(0, 100)',\n        科技创新: '@integer(0, 100)',\n        高新技术产业: '@integer(0, 100)',\n        交通网络: '@integer(0, 100)',\n        供水供电: '@integer(0, 100)',\n        公共设施: '@integer(0, 100)',\n        通信网络: '@integer(0, 100)',\n        医疗水平: '@integer(0, 100)',\n        社会福利: '@integer(0, 100)',\n        治安指数: '@integer(0, 100)',\n\n        空气质量: '@integer(0, 100)',\n        水质指数: '@integer(0, 100)',\n        噪音污染: '@integer(0, 100)',\n        '‌交通拥堵指数': '@integer(0, 100)',\n        '‌生态保护‌': '@integer(0, 100)',\n      },\n    ],\n  });\n\n  return (\n    <div>\n      <CyPivotTable\n        style={{\n          width: 'calc(100% - 50px)',\n          height: '400px',\n        }}\n        title={'测试'}\n        dataSource={dataSource?.list}\n        theme={color == 'light' ? 'DEFAULT' : 'DARK'}\n        options={{\n          rows: [\n            {\n              dimensionKey: '省份',\n              title: '省份',\n              headerStyle: {\n                textStick: true,\n              },\n              width: 'auto',\n            },\n            // {\n            //   dimensionKey: '城市',\n            //   title: '城市',\n            //   headerStyle: {\n            //     textStick: true,\n            //   },\n            //   width: 'auto',\n            // },\n            {\n              dimensionKey: '年份',\n              title: '年份',\n              headerStyle: {\n                textStick: true,\n              },\n              width: 'auto',\n            },\n            {\n              dimensionKey: '季度',\n              title: '季度',\n              headerStyle: {\n                textStick: true,\n              },\n              width: 'auto',\n            },\n          ],\n          columns: [\n            {\n              dimensionKey: 'Category',\n              title: '分类',\n              headerStyle: {\n                textStick: true,\n              },\n              width: 'auto',\n            },\n          ],\n          columnTree: [\n            {\n              dimensionKey: 'Category',\n              value: '经济指标‌',\n              children: [\n                {\n                  indicatorKey: '人均GDP',\n                },\n                {\n                  indicatorKey: '就业率‌',\n                },\n                {\n                  indicatorKey: '产业结构',\n                },\n              ],\n            },\n            {\n              dimensionKey: 'Category',\n              value: '创新能力指标',\n              children: [\n                {\n                  indicatorKey: '科技创新',\n                },\n                {\n                  indicatorKey: '人才引进',\n                },\n                {\n                  indicatorKey: '高新技术产业',\n                },\n              ],\n            },\n            {\n              dimensionKey: 'Category',\n              value: '基础设施指标',\n              children: [\n                {\n                  indicatorKey: '交通网络',\n                },\n                {\n                  indicatorKey: '供水供电',\n                },\n                {\n                  indicatorKey: '公共设施',\n                },\n                {\n                  indicatorKey: '通信网络',\n                },\n              ],\n            },\n\n            {\n              dimensionKey: 'Category',\n              value: '社会指标',\n              children: [\n                {\n                  indicatorKey: '文化教育',\n                },\n                {\n                  indicatorKey: '医疗水平',\n                },\n                {\n                  indicatorKey: '社会福利',\n                },\n                {\n                  indicatorKey: '治安指数',\n                },\n              ],\n            },\n            {\n              dimensionKey: 'Category',\n              value: '环境指标',\n              children: [\n                {\n                  indicatorKey: '空气质量',\n                },\n                {\n                  indicatorKey: '水质指数',\n                },\n                {\n                  indicatorKey: '噪音污染',\n                },\n                {\n                  indicatorKey: '‌交通拥堵指数',\n                },\n                {\n                  indicatorKey: '‌生态保护‌',\n                },\n              ],\n            },\n          ],\n        }}\n      />\n    </div>\n  );\n};"},react:{type:"NPM",value:"18.2.0"},chaoyang_component:{type:"NPM",value:"1.11.0"},antd:{type:"NPM",value:"5.12.8"},mockjs:{type:"NPM",value:"1.1.0"}},entry:"index.jsx",description:"我是简介，我可以用 Markdown 来编写",title:"简单透视表"},context:{react:a||(a=t.t(m,2)),chaoyang_component:I,antd:y,dumi:v,mockjs:x},renderOpts:{compile:(r=p()(u()().mark((function e(){var n,a=arguments;return u()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.e(4321).then(t.bind(t,14321));case 2:return e.abrupt("return",(n=e.sent).default.apply(n,a));case 3:case"end":return e.stop()}}),e)}))),function(){return r.apply(this,arguments)})}}}},82670:function(e,n,t){t.r(n),t.d(n,{texts:function(){return a}});t(7360);const a=[{value:"当有大量结构化的数据需要展现时；",paraId:0,tocIndex:0},{value:"当需要对数据进行排序、搜索、分页、自定义操作等复杂行为时。",paraId:0,tocIndex:0},{value:"参数",paraId:1,tocIndex:6},{value:"说明",paraId:1,tocIndex:6},{value:"类型",paraId:1,tocIndex:6},{value:"默认值",paraId:1,tocIndex:6},{value:"dataSource",paraId:1,tocIndex:6},{value:"数据源",paraId:1,tocIndex:6},{value:"object[]",paraId:1,tocIndex:6},{value:"-",paraId:1,tocIndex:6},{value:"columns",paraId:1,tocIndex:6},{value:"表格列",paraId:1,tocIndex:6},{value:"object[]",paraId:1,tocIndex:6},{value:"-",paraId:1,tocIndex:6},{value:"theme",paraId:1,tocIndex:6},{value:"主题",paraId:1,tocIndex:6},{value:"DARK",paraId:1,tocIndex:6},{value:",",paraId:1,tocIndex:6},{value:"DEFAULT",paraId:1,tocIndex:6},{value:",",paraId:1,tocIndex:6},{value:"ARCO",paraId:1,tocIndex:6},{value:",",paraId:1,tocIndex:6},{value:"BRIGHT",paraId:1,tocIndex:6},{value:",",paraId:1,tocIndex:6},{value:"SIMPLIFY",paraId:1,tocIndex:6},{value:"DEFAULT",paraId:1,tocIndex:6},{value:"options",paraId:1,tocIndex:6},{value:"其它配置项",paraId:1,tocIndex:6},{value:"object",paraId:1,tocIndex:6},{value:" 具体参考 options",paraId:1,tocIndex:6},{value:"-",paraId:1,tocIndex:6},{value:"onMount",paraId:1,tocIndex:6},{value:"函数获取表格实例",paraId:1,tocIndex:6},{value:"function(tableInstance, exportExcel)",paraId:1,tocIndex:6},{value:"-",paraId:1,tocIndex:6},{value:"参数",paraId:2,tocIndex:7},{value:"说明",paraId:2,tocIndex:7},{value:"类型",paraId:2,tocIndex:7},{value:"默认值",paraId:2,tocIndex:7},{value:"frozenColCount",paraId:2,tocIndex:7},{value:"冻结列数",paraId:2,tocIndex:7},{value:"number",paraId:2,tocIndex:7},{value:"-",paraId:2,tocIndex:7},{value:"bottomFrozenRowCount",paraId:2,tocIndex:7},{value:"底部冻结行数",paraId:2,tocIndex:7},{value:"number",paraId:2,tocIndex:7},{value:"-",paraId:2,tocIndex:7},{value:"rightFrozenColCount",paraId:2,tocIndex:7},{value:"右侧冻结列数",paraId:2,tocIndex:7},{value:"number",paraId:2,tocIndex:7},{value:"参数",paraId:3,tocIndex:8},{value:"说明",paraId:3,tocIndex:8},{value:"类型",paraId:3,tocIndex:8},{value:"默认值",paraId:3,tocIndex:8},{value:"click_cell",paraId:3,tocIndex:8},{value:"单元格点击事件",paraId:3,tocIndex:8},{value:"function(...args)",paraId:3,tocIndex:8},{value:"-",paraId:3,tocIndex:8},{value:"dblclick_cell",paraId:3,tocIndex:8},{value:"单元格双击事件",paraId:3,tocIndex:8},{value:"function(...args)",paraId:3,tocIndex:8},{value:"-",paraId:3,tocIndex:8},{value:"mouseenter_cell",paraId:3,tocIndex:8},{value:"鼠标进入单元格事件",paraId:3,tocIndex:8},{value:"function(...args)",paraId:3,tocIndex:8},{value:"mouseleave_cell",paraId:3,tocIndex:8},{value:"鼠标离开单元格事件",paraId:3,tocIndex:8},{value:"function(...args)",paraId:3,tocIndex:8},{value:"VTable",paraId:4}]}}]);